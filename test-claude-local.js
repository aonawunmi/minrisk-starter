// Test Claude AI analysis locally to see what it's deciding
// Run with: node test-claude-local.js

const Anthropic = require('@anthropic-ai/sdk');

// Sample event (like what's in your database)
const sampleEvent = {
  title: "Qilin Ransomware Combines Linux Payload With BYOVD Exploit in Hybrid Attack",
  description: "Cybersecurity researchers have detailed a hybrid attack campaign...",
  event_category: "Cybersecurity",
  source_name: "The Hacker News"
};

// Sample risks (like what's in your database)
const sampleRisks = [
  {
    risk_code: "STR-CYB-001",
    risk_title: "Increased Cyber Threat Landscape",
    risk_description: "Rising sophistication and frequency of cyber attacks targeting financial institutions"
  },
  {
    risk_code: "STR-CYB-002",
    risk_title: "Third-Party Vendor Security Incidents",
    risk_description: "Security breaches at vendors that could impact our operations"
  },
  {
    risk_code: "STR-REG-001",
    risk_title: "Regulatory Compliance Changes",
    risk_description: "New or changing regulatory requirements in financial services"
  }
];

async function testClaudeAnalysis() {
  console.log('üî¨ Testing Claude AI locally...\n');
  console.log('üìã Sample Event:');
  console.log(`   Title: ${sampleEvent.title}`);
  console.log(`   Category: ${sampleEvent.event_category}`);
  console.log(`   Source: ${sampleEvent.source_name}\n`);

  // Build the same prompt that scan-news.js uses
  const prompt = `You are a risk intelligence analyst. Your job is to find ANY thematic connections between external events and organizational risks for early warning purposes.

EVENT:
Title: ${sampleEvent.title}
Description: ${sampleEvent.description}
Category: ${sampleEvent.event_category}
Source: ${sampleEvent.source_name}

‚ö†Ô∏è IMPORTANT: The TITLE is the most reliable indicator. If the title contains keywords related to a risk category (e.g., "ransomware", "phishing", "cyber", "regulatory", "market"), treat it as relevant even if the description is short.

ORGANIZATIONAL RISKS:
${sampleRisks.map(r => `[${r.risk_code}] ${r.risk_title} - ${r.risk_description}`).join('\n')}

YOUR TASK:
Find ALL risks that have even a REMOTE thematic connection to this event. Be GENEROUS - we want early warnings.

MATCHING CRITERIA (match if ANY apply):
‚úì Same topic area (cyber event ‚Üí cyber risks, regulatory ‚Üí compliance risks, market ‚Üí market risks)
‚úì Same industry (financial services event ‚Üí ANY financial risk)
‚úì Precedent value (happened elsewhere ‚Üí could happen here)
‚úì Environmental indicator (shows landscape changing ‚Üí strategic/external risks)

CONCRETE EXAMPLES:
- "Ransomware attack on Bank X" ‚Üí MATCH: All cybersecurity risks (STR-CYB-001, STR-CYB-002, etc.) with confidence 0.5-0.7
- "SEC announces new rule" ‚Üí MATCH: All regulatory risks (STR-REG-001, STR-REG-002) with confidence 0.4-0.6
- "Market volatility reported" ‚Üí MATCH: Market risks (STR-MKT-001, STR-MKT-002) with confidence 0.4-0.6
- "Tech outage at competitor" ‚Üí MATCH: Technology risks (STR-OPE-001, STR-CYB-002) with confidence 0.4-0.6

CONFIDENCE SCALE:
- 0.7-1.0: Direct relevance to this organization
- 0.4-0.6: Thematic match, industry precedent, environmental indicator
- 0.3-0.4: Weak but notable connection
- below 0.3: No meaningful connection

IMPORTANT: If event matches the general theme/category of a risk, mark relevant with confidence 0.4+

Return ONLY valid JSON:
{
  "relevant": true,
  "risk_codes": ["STR-CYB-001", "STR-CYB-002"],
  "confidence": 0.5,
  "likelihood_change": 1,
  "reasoning": "Ransomware attacks show escalating cyber threat landscape",
  "impact_assessment": "Industry-wide increase in sophisticated attacks",
  "suggested_controls": ["Monitor threat intel", "Review defenses"]
}

If absolutely zero thematic overlap, return: {"relevant": false}`;

  console.log('üìù Prompt (first 500 chars):');
  console.log(prompt.substring(0, 500) + '...\n');

  try {
    const anthropic = new Anthropic({
      apiKey: process.env.ANTHROPIC_API_KEY || 'your-api-key-here'
    });

    console.log('ü§ñ Calling Claude AI...\n');

    const message = await anthropic.messages.create({
      model: "claude-3-5-sonnet-20241022",
      max_tokens: 1024,
      messages: [{
        role: "user",
        content: prompt
      }]
    });

    const responseText = message.content[0].text;
    console.log('üìä Claude AI Response:');
    console.log(responseText);
    console.log();

    try {
      const analysis = JSON.parse(responseText);
      console.log('‚úÖ Parsed Analysis:');
      console.log(JSON.stringify(analysis, null, 2));

      if (analysis.relevant) {
        console.log(`\nüéØ Result: RELEVANT - Would create alert with confidence ${analysis.confidence}`);
      } else {
        console.log('\n‚ö†Ô∏è  Result: NOT RELEVANT - No alert would be created');
        console.log('   This is the problem! Claude should match this event to STR-CYB-001 and STR-CYB-002');
      }
    } catch (parseError) {
      console.error('‚ùå Failed to parse Claude response as JSON');
      console.error(parseError.message);
    }

  } catch (error) {
    console.error('‚ùå Error calling Claude:', error.message);
    console.log('\nüí° Make sure ANTHROPIC_API_KEY is set in your environment');
  }
}

testClaudeAnalysis();
